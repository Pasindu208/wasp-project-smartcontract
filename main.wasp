app SmartAudits {
  wasp: {
    version: "^0.11.1"
  },
  title: "SmartAudits",
  client: {
    rootComponent: import { Layout } from "@client/Layout.jsx",
  },
  db: {
    prisma: {
      clientPreviewFeatures: ["extendedWhereUnique"]
    }
  },
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login",
    onAuthSucceededRedirectTo: "/"
  },
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@client/pages/auth/Login.jsx"
}
route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@client/pages/auth/Signup.jsx"
}

entity User {=psl
    id       Int     @id @default(autoincrement())
    username String  @unique
    password String
    audits   Audit[]
psl=}

entity Audit {=psl
    id      Int    @id @default(autoincrement())
    file    String
    results String
    user    User   @relation(fields: [userId], references: [id])
    userId  Int
psl=}

action createAudit {
  fn: import { createAudit } from "@server/actions.js",
  entities: [Audit]
}

action updateAudit {
  fn: import { updateAudit } from "@server/actions.js",
  entities: [Audit]
}

query getAudit {
  fn: import { getAudit } from "@server/queries.js",
  entities: [Audit]
}

query getAudits {
  fn: import { getAudits } from "@server/queries.js",
  entities: [Audit]
}

route HomePageRoute { path: "/", to: HomePage }
page HomePage {
  component: import { HomePage } from "@client/pages/Home.jsx",
  authRequired: false
}

route AuditRoute { path: "/audit/:auditId", to: AuditPage }
page AuditPage {
  component: import { Audit } from "@client/pages/Audit.jsx",
  authRequired: true
}

route AuditsRoute { path: "/audits", to: AuditsPage }
page AuditsPage {
  component: import { Audits } from "@client/pages/Audits.jsx",
  authRequired: true
}
